on:
  push:
    tags:
      - 'accesskit_python-v*'

name: Publish Python bindings

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        include:
          - os: macos-latest
            target: x86_64
          - os: macos-latest
            target: aarch64
          - os: ubuntu-latest
            target: x86_64
          - os: ubuntu-latest
            target: x86
            skip-wheel-installation: true
          - os: ubuntu-latest
            target: aarch64
            skip-wheel-installation: true
          - os: windows-latest
            target: x64
          - os: windows-latest
            arch: x86
            target: x86

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          arch: ${{ matrix.arch || "x64" }}
          python-version: ${{ matrix.python-version }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
      - name: Test wheel installation
        if: matrix.skip-wheel-installation != true
        run: |
          pip install accesskit --no-index --find-links dist --force-reinstall
          python -c "import accesskit"
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  pypi-release:
    name: Publish to PyPI
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build-wheels, sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *

  github-release:
    name: Add to GitHub release
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build-wheels, sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels

      - uses: AButler/upload-release-assets@v2.0
        with:
          files: "dist/*"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.ref_name }}
